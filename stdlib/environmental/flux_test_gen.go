// DO NOT EDIT: This file is autogenerated via the builtin command.

package environmental

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 92,
					Line:   158,
				},
				File:   "environmental_test.flux",
				Source: "package environmental_test\n\nimport \"testing\"\nimport \"environmental\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,double,dateTime:RFC3339\n#default,pressure,,,\n,result,table,_value,_time\n,,0,1002.49,2019-08-22T16:25:30Z\n,,0,1002.4616666666667,2019-08-22T16:26:00Z\n,,0,1002.466,2019-08-22T16:26:30Z\n,,0,1002.47,2019-08-22T16:27:00Z\n,,0,1002.465,2019-08-22T16:27:30Z\n,,0,1002.458,2019-08-22T16:28:00Z\n,,0,1002.448,2019-08-22T16:28:30Z\n,,0,1002.4633333333333,2019-08-22T16:29:00Z\n,,0,1002.45,2019-08-22T16:29:30Z\n,,0,1002.434,2019-08-22T16:30:00Z\n,,0,1002.436,2019-08-22T16:30:30Z\n,,0,1002.4333333333334,2019-08-22T16:31:00Z\n,,0,1002.43,2019-08-22T16:31:30Z\n,,0,1002.424,2019-08-22T16:32:00Z\n,,0,1002.4233333333333,2019-08-22T16:32:30Z\n,,0,1002.43,2019-08-22T16:33:00Z\n,,0,1002.432,2019-08-22T16:33:30Z\n,,0,1002.3966666666666,2019-08-22T16:34:00Z\n,,0,1002.39,2019-08-22T16:34:30Z\n,,0,1002.4375,2019-08-22T16:35:00Z\n,,0,1002.418,2019-08-22T16:35:30Z\n,,0,1002.43,2019-08-22T16:36:00Z\n,,0,1002.415,2019-08-22T16:36:30Z\n,,0,1002.392,2019-08-22T16:37:00Z\n,,0,1002.392,2019-08-22T16:37:30Z\n,,0,1002.3783333333332,2019-08-22T16:38:00Z\n,,0,1002.368,2019-08-22T16:38:30Z\n,,0,1002.368,2019-08-22T16:39:00Z\n,,0,1002.36,2019-08-22T16:39:30Z\n,,0,1002.3340000000001,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,gas,,,\n,result,table,_value,_time\n,,0,660.5,2019-08-22T16:25:30Z\n,,0,653,2019-08-22T16:26:00Z\n,,0,650.3333333333334,2019-08-22T16:26:30Z\n,,0,655,2019-08-22T16:27:00Z\n,,0,654.5,2019-08-22T16:27:30Z\n,,0,652.3333333333334,2019-08-22T16:28:00Z\n,,0,651,2019-08-22T16:28:30Z\n,,0,648.5,2019-08-22T16:29:00Z\n,,0,648.3333333333334,2019-08-22T16:29:30Z\n,,0,646,2019-08-22T16:30:00Z\n,,0,644,2019-08-22T16:30:30Z\n,,0,644.3333333333334,2019-08-22T16:31:00Z\n,,0,643,2019-08-22T16:31:30Z\n,,0,640,2019-08-22T16:32:00Z\n,,0,638.5,2019-08-22T16:32:30Z\n,,0,640,2019-08-22T16:33:00Z\n,,0,656.6666666666666,2019-08-22T16:33:30Z\n,,0,647,2019-08-22T16:34:00Z\n,,0,641,2019-08-22T16:34:30Z\n,,0,636,2019-08-22T16:35:00Z\n,,0,633.6666666666666,2019-08-22T16:35:30Z\n,,0,632.5,2019-08-22T16:36:00Z\n,,0,631.5,2019-08-22T16:36:30Z\n,,0,629.3333333333334,2019-08-22T16:37:00Z\n,,0,628.5,2019-08-22T16:37:30Z\n,,0,636.5,2019-08-22T16:38:00Z\n,,0,667.6666666666666,2019-08-22T16:38:30Z\n,,0,682.5,2019-08-22T16:39:00Z\n,,0,663,2019-08-22T16:39:30Z\n,,0,642,2019-08-22T16:40:00Z\n,,0,642,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,temperature,,,\n,result,table,_value,_time\n,,0,32.444,2019-08-22T16:25:30Z\n,,0,32.44833333333333,2019-08-22T16:26:00Z\n,,0,32.446000000000005,2019-08-22T16:26:30Z\n,,0,32.45,2019-08-22T16:27:00Z\n,,0,32.39833333333333,2019-08-22T16:27:30Z\n,,0,32.38199999999999,2019-08-22T16:28:00Z\n,,0,32.364000000000004,2019-08-22T16:28:30Z\n,,0,32.32333333333333,2019-08-22T16:29:00Z\n,,0,32.29,2019-08-22T16:29:30Z\n,,0,32.251999999999995,2019-08-22T16:30:00Z\n,,0,32.274,2019-08-22T16:30:30Z\n,,0,32.288333333333334,2019-08-22T16:31:00Z\n,,0,32.28,2019-08-22T16:31:30Z\n,,0,32.269999999999996,2019-08-22T16:32:00Z\n,,0,32.193333333333335,2019-08-22T16:32:30Z\n,,0,32.164,2019-08-22T16:33:00Z\n,,0,32.124,2019-08-22T16:33:30Z\n,,0,32.098333333333336,2019-08-22T16:34:00Z\n,,0,32.125,2019-08-22T16:34:30Z\n,,0,32.084999999999994,2019-08-22T16:35:00Z\n,,0,32.12,2019-08-22T16:35:30Z\n,,0,32.07666666666666,2019-08-22T16:36:00Z\n,,0,32.11,2019-08-22T16:36:30Z\n,,0,32.169999999999995,2019-08-22T16:37:00Z\n,,0,32.204,2019-08-22T16:37:30Z\n,,0,32.20333333333334,2019-08-22T16:38:00Z\n,,0,32.221999999999994,2019-08-22T16:38:30Z\n,,0,32.3,2019-08-22T16:39:00Z\n,,0,32.36333333333333,2019-08-22T16:39:30Z\n,,0,32.4,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\"\n\noutData = \"\n#datatype,string,long,dateTime:RFC3339,double\n#default,CO2corr,,,\n,result,table,_time,_value\n,,0,2019-08-22T16:25:30Z,684.2572294843294\n,,0,2019-08-22T16:26:00Z,676.5161782982694\n,,0,2019-08-22T16:26:30Z,673.7454215332459\n,,0,2019-08-22T16:27:00Z,678.5862632194672\n,,0,2019-08-22T16:27:30Z,677.9570013676977\n,,0,2019-08-22T16:28:00Z,675.6812796607787\n,,0,2019-08-22T16:28:30Z,674.2672250773508\n,,0,2019-08-22T16:29:00Z,671.5781944509896\n,,0,2019-08-22T16:29:30Z,671.3412618708516\n,,0,2019-08-22T16:30:00Z,668.8525777059576\n,,0,2019-08-22T16:30:30Z,666.8285287025711\n,,0,2019-08-22T16:31:00Z,667.2067629300313\n,,0,2019-08-22T16:31:30Z,665.810145215983\n,,0,2019-08-22T16:32:00Z,662.6859905976642\n,,0,2019-08-22T16:32:30Z,660.9673020266739\n,,0,2019-08-22T16:33:00Z,662.4520316686965\n,,0,2019-08-22T16:33:30Z,679.6129809787086\n,,0,2019-08-22T16:34:00Z,669.5758278840392\n,,0,2019-08-22T16:34:30Z,663.4288337097714\n,,0,2019-08-22T16:35:00Z,658.1364442534563\n,,0,2019-08-22T16:35:30Z,655.809843589246\n,,0,2019-08-22T16:36:00Z,654.5016518797775\n,,0,2019-08-22T16:36:30Z,653.5480102237651\n,,0,2019-08-22T16:37:00Z,651.4486609810317\n,,0,2019-08-22T16:37:30Z,650.6584919148427\n,,0,2019-08-22T16:38:00Z,658.9480866320873\n,,0,2019-08-22T16:38:30Z,691.2633204845954\n,,0,2019-08-22T16:39:00Z,706.8013824740459\n,,0,2019-08-22T16:39:30Z,686.7549024182185\n,,0,2019-08-22T16:40:00Z,665.0995478950251\n,,0,2019-08-22T16:40:03.097505Z,665.0995478950251\n\"\n\nt_set = (table=<-) =>\n\ttable\n\t\t|> range(start: 2019-08-22T16:25:30Z)\n\t\t|> experimental.idealGasLaw()\n\ntest _set = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set}",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   6,
						},
						File:   "environmental_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "environmental_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 41,
								Line:   6,
							},
							File:   "environmental_test.flux",
							Source: "() => (2030-01-01T00:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   6,
								},
								File:   "environmental_test.flux",
								Source: "2030-01-01T00:00:00Z",
								Start: ast.Position{
									Column: 21,
									Line:   6,
								},
							},
						},
						Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   6,
					},
					File:   "environmental_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   113,
					},
					File:   "environmental_test.flux",
					Source: "inData = \"\n#datatype,string,long,double,dateTime:RFC3339\n#default,pressure,,,\n,result,table,_value,_time\n,,0,1002.49,2019-08-22T16:25:30Z\n,,0,1002.4616666666667,2019-08-22T16:26:00Z\n,,0,1002.466,2019-08-22T16:26:30Z\n,,0,1002.47,2019-08-22T16:27:00Z\n,,0,1002.465,2019-08-22T16:27:30Z\n,,0,1002.458,2019-08-22T16:28:00Z\n,,0,1002.448,2019-08-22T16:28:30Z\n,,0,1002.4633333333333,2019-08-22T16:29:00Z\n,,0,1002.45,2019-08-22T16:29:30Z\n,,0,1002.434,2019-08-22T16:30:00Z\n,,0,1002.436,2019-08-22T16:30:30Z\n,,0,1002.4333333333334,2019-08-22T16:31:00Z\n,,0,1002.43,2019-08-22T16:31:30Z\n,,0,1002.424,2019-08-22T16:32:00Z\n,,0,1002.4233333333333,2019-08-22T16:32:30Z\n,,0,1002.43,2019-08-22T16:33:00Z\n,,0,1002.432,2019-08-22T16:33:30Z\n,,0,1002.3966666666666,2019-08-22T16:34:00Z\n,,0,1002.39,2019-08-22T16:34:30Z\n,,0,1002.4375,2019-08-22T16:35:00Z\n,,0,1002.418,2019-08-22T16:35:30Z\n,,0,1002.43,2019-08-22T16:36:00Z\n,,0,1002.415,2019-08-22T16:36:30Z\n,,0,1002.392,2019-08-22T16:37:00Z\n,,0,1002.392,2019-08-22T16:37:30Z\n,,0,1002.3783333333332,2019-08-22T16:38:00Z\n,,0,1002.368,2019-08-22T16:38:30Z\n,,0,1002.368,2019-08-22T16:39:00Z\n,,0,1002.36,2019-08-22T16:39:30Z\n,,0,1002.3340000000001,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,gas,,,\n,result,table,_value,_time\n,,0,660.5,2019-08-22T16:25:30Z\n,,0,653,2019-08-22T16:26:00Z\n,,0,650.3333333333334,2019-08-22T16:26:30Z\n,,0,655,2019-08-22T16:27:00Z\n,,0,654.5,2019-08-22T16:27:30Z\n,,0,652.3333333333334,2019-08-22T16:28:00Z\n,,0,651,2019-08-22T16:28:30Z\n,,0,648.5,2019-08-22T16:29:00Z\n,,0,648.3333333333334,2019-08-22T16:29:30Z\n,,0,646,2019-08-22T16:30:00Z\n,,0,644,2019-08-22T16:30:30Z\n,,0,644.3333333333334,2019-08-22T16:31:00Z\n,,0,643,2019-08-22T16:31:30Z\n,,0,640,2019-08-22T16:32:00Z\n,,0,638.5,2019-08-22T16:32:30Z\n,,0,640,2019-08-22T16:33:00Z\n,,0,656.6666666666666,2019-08-22T16:33:30Z\n,,0,647,2019-08-22T16:34:00Z\n,,0,641,2019-08-22T16:34:30Z\n,,0,636,2019-08-22T16:35:00Z\n,,0,633.6666666666666,2019-08-22T16:35:30Z\n,,0,632.5,2019-08-22T16:36:00Z\n,,0,631.5,2019-08-22T16:36:30Z\n,,0,629.3333333333334,2019-08-22T16:37:00Z\n,,0,628.5,2019-08-22T16:37:30Z\n,,0,636.5,2019-08-22T16:38:00Z\n,,0,667.6666666666666,2019-08-22T16:38:30Z\n,,0,682.5,2019-08-22T16:39:00Z\n,,0,663,2019-08-22T16:39:30Z\n,,0,642,2019-08-22T16:40:00Z\n,,0,642,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,temperature,,,\n,result,table,_value,_time\n,,0,32.444,2019-08-22T16:25:30Z\n,,0,32.44833333333333,2019-08-22T16:26:00Z\n,,0,32.446000000000005,2019-08-22T16:26:30Z\n,,0,32.45,2019-08-22T16:27:00Z\n,,0,32.39833333333333,2019-08-22T16:27:30Z\n,,0,32.38199999999999,2019-08-22T16:28:00Z\n,,0,32.364000000000004,2019-08-22T16:28:30Z\n,,0,32.32333333333333,2019-08-22T16:29:00Z\n,,0,32.29,2019-08-22T16:29:30Z\n,,0,32.251999999999995,2019-08-22T16:30:00Z\n,,0,32.274,2019-08-22T16:30:30Z\n,,0,32.288333333333334,2019-08-22T16:31:00Z\n,,0,32.28,2019-08-22T16:31:30Z\n,,0,32.269999999999996,2019-08-22T16:32:00Z\n,,0,32.193333333333335,2019-08-22T16:32:30Z\n,,0,32.164,2019-08-22T16:33:00Z\n,,0,32.124,2019-08-22T16:33:30Z\n,,0,32.098333333333336,2019-08-22T16:34:00Z\n,,0,32.125,2019-08-22T16:34:30Z\n,,0,32.084999999999994,2019-08-22T16:35:00Z\n,,0,32.12,2019-08-22T16:35:30Z\n,,0,32.07666666666666,2019-08-22T16:36:00Z\n,,0,32.11,2019-08-22T16:36:30Z\n,,0,32.169999999999995,2019-08-22T16:37:00Z\n,,0,32.204,2019-08-22T16:37:30Z\n,,0,32.20333333333334,2019-08-22T16:38:00Z\n,,0,32.221999999999994,2019-08-22T16:38:30Z\n,,0,32.3,2019-08-22T16:39:00Z\n,,0,32.36333333333333,2019-08-22T16:39:30Z\n,,0,32.4,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "environmental_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   113,
						},
						File:   "environmental_test.flux",
						Source: "\"\n#datatype,string,long,double,dateTime:RFC3339\n#default,pressure,,,\n,result,table,_value,_time\n,,0,1002.49,2019-08-22T16:25:30Z\n,,0,1002.4616666666667,2019-08-22T16:26:00Z\n,,0,1002.466,2019-08-22T16:26:30Z\n,,0,1002.47,2019-08-22T16:27:00Z\n,,0,1002.465,2019-08-22T16:27:30Z\n,,0,1002.458,2019-08-22T16:28:00Z\n,,0,1002.448,2019-08-22T16:28:30Z\n,,0,1002.4633333333333,2019-08-22T16:29:00Z\n,,0,1002.45,2019-08-22T16:29:30Z\n,,0,1002.434,2019-08-22T16:30:00Z\n,,0,1002.436,2019-08-22T16:30:30Z\n,,0,1002.4333333333334,2019-08-22T16:31:00Z\n,,0,1002.43,2019-08-22T16:31:30Z\n,,0,1002.424,2019-08-22T16:32:00Z\n,,0,1002.4233333333333,2019-08-22T16:32:30Z\n,,0,1002.43,2019-08-22T16:33:00Z\n,,0,1002.432,2019-08-22T16:33:30Z\n,,0,1002.3966666666666,2019-08-22T16:34:00Z\n,,0,1002.39,2019-08-22T16:34:30Z\n,,0,1002.4375,2019-08-22T16:35:00Z\n,,0,1002.418,2019-08-22T16:35:30Z\n,,0,1002.43,2019-08-22T16:36:00Z\n,,0,1002.415,2019-08-22T16:36:30Z\n,,0,1002.392,2019-08-22T16:37:00Z\n,,0,1002.392,2019-08-22T16:37:30Z\n,,0,1002.3783333333332,2019-08-22T16:38:00Z\n,,0,1002.368,2019-08-22T16:38:30Z\n,,0,1002.368,2019-08-22T16:39:00Z\n,,0,1002.36,2019-08-22T16:39:30Z\n,,0,1002.3340000000001,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,gas,,,\n,result,table,_value,_time\n,,0,660.5,2019-08-22T16:25:30Z\n,,0,653,2019-08-22T16:26:00Z\n,,0,650.3333333333334,2019-08-22T16:26:30Z\n,,0,655,2019-08-22T16:27:00Z\n,,0,654.5,2019-08-22T16:27:30Z\n,,0,652.3333333333334,2019-08-22T16:28:00Z\n,,0,651,2019-08-22T16:28:30Z\n,,0,648.5,2019-08-22T16:29:00Z\n,,0,648.3333333333334,2019-08-22T16:29:30Z\n,,0,646,2019-08-22T16:30:00Z\n,,0,644,2019-08-22T16:30:30Z\n,,0,644.3333333333334,2019-08-22T16:31:00Z\n,,0,643,2019-08-22T16:31:30Z\n,,0,640,2019-08-22T16:32:00Z\n,,0,638.5,2019-08-22T16:32:30Z\n,,0,640,2019-08-22T16:33:00Z\n,,0,656.6666666666666,2019-08-22T16:33:30Z\n,,0,647,2019-08-22T16:34:00Z\n,,0,641,2019-08-22T16:34:30Z\n,,0,636,2019-08-22T16:35:00Z\n,,0,633.6666666666666,2019-08-22T16:35:30Z\n,,0,632.5,2019-08-22T16:36:00Z\n,,0,631.5,2019-08-22T16:36:30Z\n,,0,629.3333333333334,2019-08-22T16:37:00Z\n,,0,628.5,2019-08-22T16:37:30Z\n,,0,636.5,2019-08-22T16:38:00Z\n,,0,667.6666666666666,2019-08-22T16:38:30Z\n,,0,682.5,2019-08-22T16:39:00Z\n,,0,663,2019-08-22T16:39:30Z\n,,0,642,2019-08-22T16:40:00Z\n,,0,642,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,temperature,,,\n,result,table,_value,_time\n,,0,32.444,2019-08-22T16:25:30Z\n,,0,32.44833333333333,2019-08-22T16:26:00Z\n,,0,32.446000000000005,2019-08-22T16:26:30Z\n,,0,32.45,2019-08-22T16:27:00Z\n,,0,32.39833333333333,2019-08-22T16:27:30Z\n,,0,32.38199999999999,2019-08-22T16:28:00Z\n,,0,32.364000000000004,2019-08-22T16:28:30Z\n,,0,32.32333333333333,2019-08-22T16:29:00Z\n,,0,32.29,2019-08-22T16:29:30Z\n,,0,32.251999999999995,2019-08-22T16:30:00Z\n,,0,32.274,2019-08-22T16:30:30Z\n,,0,32.288333333333334,2019-08-22T16:31:00Z\n,,0,32.28,2019-08-22T16:31:30Z\n,,0,32.269999999999996,2019-08-22T16:32:00Z\n,,0,32.193333333333335,2019-08-22T16:32:30Z\n,,0,32.164,2019-08-22T16:33:00Z\n,,0,32.124,2019-08-22T16:33:30Z\n,,0,32.098333333333336,2019-08-22T16:34:00Z\n,,0,32.125,2019-08-22T16:34:30Z\n,,0,32.084999999999994,2019-08-22T16:35:00Z\n,,0,32.12,2019-08-22T16:35:30Z\n,,0,32.07666666666666,2019-08-22T16:36:00Z\n,,0,32.11,2019-08-22T16:36:30Z\n,,0,32.169999999999995,2019-08-22T16:37:00Z\n,,0,32.204,2019-08-22T16:37:30Z\n,,0,32.20333333333334,2019-08-22T16:38:00Z\n,,0,32.221999999999994,2019-08-22T16:38:30Z\n,,0,32.3,2019-08-22T16:39:00Z\n,,0,32.36333333333333,2019-08-22T16:39:30Z\n,,0,32.4,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#datatype,string,long,double,dateTime:RFC3339\n#default,pressure,,,\n,result,table,_value,_time\n,,0,1002.49,2019-08-22T16:25:30Z\n,,0,1002.4616666666667,2019-08-22T16:26:00Z\n,,0,1002.466,2019-08-22T16:26:30Z\n,,0,1002.47,2019-08-22T16:27:00Z\n,,0,1002.465,2019-08-22T16:27:30Z\n,,0,1002.458,2019-08-22T16:28:00Z\n,,0,1002.448,2019-08-22T16:28:30Z\n,,0,1002.4633333333333,2019-08-22T16:29:00Z\n,,0,1002.45,2019-08-22T16:29:30Z\n,,0,1002.434,2019-08-22T16:30:00Z\n,,0,1002.436,2019-08-22T16:30:30Z\n,,0,1002.4333333333334,2019-08-22T16:31:00Z\n,,0,1002.43,2019-08-22T16:31:30Z\n,,0,1002.424,2019-08-22T16:32:00Z\n,,0,1002.4233333333333,2019-08-22T16:32:30Z\n,,0,1002.43,2019-08-22T16:33:00Z\n,,0,1002.432,2019-08-22T16:33:30Z\n,,0,1002.3966666666666,2019-08-22T16:34:00Z\n,,0,1002.39,2019-08-22T16:34:30Z\n,,0,1002.4375,2019-08-22T16:35:00Z\n,,0,1002.418,2019-08-22T16:35:30Z\n,,0,1002.43,2019-08-22T16:36:00Z\n,,0,1002.415,2019-08-22T16:36:30Z\n,,0,1002.392,2019-08-22T16:37:00Z\n,,0,1002.392,2019-08-22T16:37:30Z\n,,0,1002.3783333333332,2019-08-22T16:38:00Z\n,,0,1002.368,2019-08-22T16:38:30Z\n,,0,1002.368,2019-08-22T16:39:00Z\n,,0,1002.36,2019-08-22T16:39:30Z\n,,0,1002.3340000000001,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,gas,,,\n,result,table,_value,_time\n,,0,660.5,2019-08-22T16:25:30Z\n,,0,653,2019-08-22T16:26:00Z\n,,0,650.3333333333334,2019-08-22T16:26:30Z\n,,0,655,2019-08-22T16:27:00Z\n,,0,654.5,2019-08-22T16:27:30Z\n,,0,652.3333333333334,2019-08-22T16:28:00Z\n,,0,651,2019-08-22T16:28:30Z\n,,0,648.5,2019-08-22T16:29:00Z\n,,0,648.3333333333334,2019-08-22T16:29:30Z\n,,0,646,2019-08-22T16:30:00Z\n,,0,644,2019-08-22T16:30:30Z\n,,0,644.3333333333334,2019-08-22T16:31:00Z\n,,0,643,2019-08-22T16:31:30Z\n,,0,640,2019-08-22T16:32:00Z\n,,0,638.5,2019-08-22T16:32:30Z\n,,0,640,2019-08-22T16:33:00Z\n,,0,656.6666666666666,2019-08-22T16:33:30Z\n,,0,647,2019-08-22T16:34:00Z\n,,0,641,2019-08-22T16:34:30Z\n,,0,636,2019-08-22T16:35:00Z\n,,0,633.6666666666666,2019-08-22T16:35:30Z\n,,0,632.5,2019-08-22T16:36:00Z\n,,0,631.5,2019-08-22T16:36:30Z\n,,0,629.3333333333334,2019-08-22T16:37:00Z\n,,0,628.5,2019-08-22T16:37:30Z\n,,0,636.5,2019-08-22T16:38:00Z\n,,0,667.6666666666666,2019-08-22T16:38:30Z\n,,0,682.5,2019-08-22T16:39:00Z\n,,0,663,2019-08-22T16:39:30Z\n,,0,642,2019-08-22T16:40:00Z\n,,0,642,2019-08-22T16:40:03.097505Z\n\n#datatype,string,long,double,dateTime:RFC3339\n#default,temperature,,,\n,result,table,_value,_time\n,,0,32.444,2019-08-22T16:25:30Z\n,,0,32.44833333333333,2019-08-22T16:26:00Z\n,,0,32.446000000000005,2019-08-22T16:26:30Z\n,,0,32.45,2019-08-22T16:27:00Z\n,,0,32.39833333333333,2019-08-22T16:27:30Z\n,,0,32.38199999999999,2019-08-22T16:28:00Z\n,,0,32.364000000000004,2019-08-22T16:28:30Z\n,,0,32.32333333333333,2019-08-22T16:29:00Z\n,,0,32.29,2019-08-22T16:29:30Z\n,,0,32.251999999999995,2019-08-22T16:30:00Z\n,,0,32.274,2019-08-22T16:30:30Z\n,,0,32.288333333333334,2019-08-22T16:31:00Z\n,,0,32.28,2019-08-22T16:31:30Z\n,,0,32.269999999999996,2019-08-22T16:32:00Z\n,,0,32.193333333333335,2019-08-22T16:32:30Z\n,,0,32.164,2019-08-22T16:33:00Z\n,,0,32.124,2019-08-22T16:33:30Z\n,,0,32.098333333333336,2019-08-22T16:34:00Z\n,,0,32.125,2019-08-22T16:34:30Z\n,,0,32.084999999999994,2019-08-22T16:35:00Z\n,,0,32.12,2019-08-22T16:35:30Z\n,,0,32.07666666666666,2019-08-22T16:36:00Z\n,,0,32.11,2019-08-22T16:36:30Z\n,,0,32.169999999999995,2019-08-22T16:37:00Z\n,,0,32.204,2019-08-22T16:37:30Z\n,,0,32.20333333333334,2019-08-22T16:38:00Z\n,,0,32.221999999999994,2019-08-22T16:38:30Z\n,,0,32.3,2019-08-22T16:39:00Z\n,,0,32.36333333333333,2019-08-22T16:39:30Z\n,,0,32.4,2019-08-22T16:40:00Z\n,,0,,2019-08-22T16:40:03.097505Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   150,
					},
					File:   "environmental_test.flux",
					Source: "outData = \"\n#datatype,string,long,dateTime:RFC3339,double\n#default,CO2corr,,,\n,result,table,_time,_value\n,,0,2019-08-22T16:25:30Z,684.2572294843294\n,,0,2019-08-22T16:26:00Z,676.5161782982694\n,,0,2019-08-22T16:26:30Z,673.7454215332459\n,,0,2019-08-22T16:27:00Z,678.5862632194672\n,,0,2019-08-22T16:27:30Z,677.9570013676977\n,,0,2019-08-22T16:28:00Z,675.6812796607787\n,,0,2019-08-22T16:28:30Z,674.2672250773508\n,,0,2019-08-22T16:29:00Z,671.5781944509896\n,,0,2019-08-22T16:29:30Z,671.3412618708516\n,,0,2019-08-22T16:30:00Z,668.8525777059576\n,,0,2019-08-22T16:30:30Z,666.8285287025711\n,,0,2019-08-22T16:31:00Z,667.2067629300313\n,,0,2019-08-22T16:31:30Z,665.810145215983\n,,0,2019-08-22T16:32:00Z,662.6859905976642\n,,0,2019-08-22T16:32:30Z,660.9673020266739\n,,0,2019-08-22T16:33:00Z,662.4520316686965\n,,0,2019-08-22T16:33:30Z,679.6129809787086\n,,0,2019-08-22T16:34:00Z,669.5758278840392\n,,0,2019-08-22T16:34:30Z,663.4288337097714\n,,0,2019-08-22T16:35:00Z,658.1364442534563\n,,0,2019-08-22T16:35:30Z,655.809843589246\n,,0,2019-08-22T16:36:00Z,654.5016518797775\n,,0,2019-08-22T16:36:30Z,653.5480102237651\n,,0,2019-08-22T16:37:00Z,651.4486609810317\n,,0,2019-08-22T16:37:30Z,650.6584919148427\n,,0,2019-08-22T16:38:00Z,658.9480866320873\n,,0,2019-08-22T16:38:30Z,691.2633204845954\n,,0,2019-08-22T16:39:00Z,706.8013824740459\n,,0,2019-08-22T16:39:30Z,686.7549024182185\n,,0,2019-08-22T16:40:00Z,665.0995478950251\n,,0,2019-08-22T16:40:03.097505Z,665.0995478950251\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   115,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   115,
						},
						File:   "environmental_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   115,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   150,
						},
						File:   "environmental_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,double\n#default,CO2corr,,,\n,result,table,_time,_value\n,,0,2019-08-22T16:25:30Z,684.2572294843294\n,,0,2019-08-22T16:26:00Z,676.5161782982694\n,,0,2019-08-22T16:26:30Z,673.7454215332459\n,,0,2019-08-22T16:27:00Z,678.5862632194672\n,,0,2019-08-22T16:27:30Z,677.9570013676977\n,,0,2019-08-22T16:28:00Z,675.6812796607787\n,,0,2019-08-22T16:28:30Z,674.2672250773508\n,,0,2019-08-22T16:29:00Z,671.5781944509896\n,,0,2019-08-22T16:29:30Z,671.3412618708516\n,,0,2019-08-22T16:30:00Z,668.8525777059576\n,,0,2019-08-22T16:30:30Z,666.8285287025711\n,,0,2019-08-22T16:31:00Z,667.2067629300313\n,,0,2019-08-22T16:31:30Z,665.810145215983\n,,0,2019-08-22T16:32:00Z,662.6859905976642\n,,0,2019-08-22T16:32:30Z,660.9673020266739\n,,0,2019-08-22T16:33:00Z,662.4520316686965\n,,0,2019-08-22T16:33:30Z,679.6129809787086\n,,0,2019-08-22T16:34:00Z,669.5758278840392\n,,0,2019-08-22T16:34:30Z,663.4288337097714\n,,0,2019-08-22T16:35:00Z,658.1364442534563\n,,0,2019-08-22T16:35:30Z,655.809843589246\n,,0,2019-08-22T16:36:00Z,654.5016518797775\n,,0,2019-08-22T16:36:30Z,653.5480102237651\n,,0,2019-08-22T16:37:00Z,651.4486609810317\n,,0,2019-08-22T16:37:30Z,650.6584919148427\n,,0,2019-08-22T16:38:00Z,658.9480866320873\n,,0,2019-08-22T16:38:30Z,691.2633204845954\n,,0,2019-08-22T16:39:00Z,706.8013824740459\n,,0,2019-08-22T16:39:30Z,686.7549024182185\n,,0,2019-08-22T16:40:00Z,665.0995478950251\n,,0,2019-08-22T16:40:03.097505Z,665.0995478950251\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   115,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,double\n#default,CO2corr,,,\n,result,table,_time,_value\n,,0,2019-08-22T16:25:30Z,684.2572294843294\n,,0,2019-08-22T16:26:00Z,676.5161782982694\n,,0,2019-08-22T16:26:30Z,673.7454215332459\n,,0,2019-08-22T16:27:00Z,678.5862632194672\n,,0,2019-08-22T16:27:30Z,677.9570013676977\n,,0,2019-08-22T16:28:00Z,675.6812796607787\n,,0,2019-08-22T16:28:30Z,674.2672250773508\n,,0,2019-08-22T16:29:00Z,671.5781944509896\n,,0,2019-08-22T16:29:30Z,671.3412618708516\n,,0,2019-08-22T16:30:00Z,668.8525777059576\n,,0,2019-08-22T16:30:30Z,666.8285287025711\n,,0,2019-08-22T16:31:00Z,667.2067629300313\n,,0,2019-08-22T16:31:30Z,665.810145215983\n,,0,2019-08-22T16:32:00Z,662.6859905976642\n,,0,2019-08-22T16:32:30Z,660.9673020266739\n,,0,2019-08-22T16:33:00Z,662.4520316686965\n,,0,2019-08-22T16:33:30Z,679.6129809787086\n,,0,2019-08-22T16:34:00Z,669.5758278840392\n,,0,2019-08-22T16:34:30Z,663.4288337097714\n,,0,2019-08-22T16:35:00Z,658.1364442534563\n,,0,2019-08-22T16:35:30Z,655.809843589246\n,,0,2019-08-22T16:36:00Z,654.5016518797775\n,,0,2019-08-22T16:36:30Z,653.5480102237651\n,,0,2019-08-22T16:37:00Z,651.4486609810317\n,,0,2019-08-22T16:37:30Z,650.6584919148427\n,,0,2019-08-22T16:38:00Z,658.9480866320873\n,,0,2019-08-22T16:38:30Z,691.2633204845954\n,,0,2019-08-22T16:39:00Z,706.8013824740459\n,,0,2019-08-22T16:39:30Z,686.7549024182185\n,,0,2019-08-22T16:40:00Z,665.0995478950251\n,,0,2019-08-22T16:40:03.097505Z,665.0995478950251\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   155,
					},
					File:   "environmental_test.flux",
					Source: "t_set = (table=<-) =>\n\ttable\n\t\t|> range(start: 2019-08-22T16:25:30Z)\n\t\t|> experimental.idealGasLaw()",
					Start: ast.Position{
						Column: 1,
						Line:   152,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   152,
						},
						File:   "environmental_test.flux",
						Source: "t_set",
						Start: ast.Position{
							Column: 1,
							Line:   152,
						},
					},
				},
				Name: "t_set",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   155,
						},
						File:   "environmental_test.flux",
						Source: "(table=<-) =>\n\ttable\n\t\t|> range(start: 2019-08-22T16:25:30Z)\n\t\t|> experimental.idealGasLaw()",
						Start: ast.Position{
							Column: 9,
							Line:   152,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   153,
									},
									File:   "environmental_test.flux",
									Source: "table",
									Start: ast.Position{
										Column: 2,
										Line:   153,
									},
								},
							},
							Name: "table",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   154,
								},
								File:   "environmental_test.flux",
								Source: "table\n\t\t|> range(start: 2019-08-22T16:25:30Z)",
								Start: ast.Position{
									Column: 2,
									Line:   153,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   154,
										},
										File:   "environmental_test.flux",
										Source: "start: 2019-08-22T16:25:30Z",
										Start: ast.Position{
											Column: 12,
											Line:   154,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 39,
												Line:   154,
											},
											File:   "environmental_test.flux",
											Source: "start: 2019-08-22T16:25:30Z",
											Start: ast.Position{
												Column: 12,
												Line:   154,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 17,
													Line:   154,
												},
												File:   "environmental_test.flux",
												Source: "start",
												Start: ast.Position{
													Column: 12,
													Line:   154,
												},
											},
										},
										Name: "start",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 39,
													Line:   154,
												},
												File:   "environmental_test.flux",
												Source: "2019-08-22T16:25:30Z",
												Start: ast.Position{
													Column: 19,
													Line:   154,
												},
											},
										},
										Value: parser.MustParseTime("2019-08-22T16:25:30Z"),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   154,
									},
									File:   "environmental_test.flux",
									Source: "range(start: 2019-08-22T16:25:30Z)",
									Start: ast.Position{
										Column: 6,
										Line:   154,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   154,
										},
										File:   "environmental_test.flux",
										Source: "range",
										Start: ast.Position{
											Column: 6,
											Line:   154,
										},
									},
								},
								Name: "range",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   155,
							},
							File:   "environmental_test.flux",
							Source: "table\n\t\t|> range(start: 2019-08-22T16:25:30Z)\n\t\t|> experimental.idealGasLaw()",
							Start: ast.Position{
								Column: 2,
								Line:   153,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: nil,
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   155,
								},
								File:   "environmental_test.flux",
								Source: "experimental.idealGasLaw()",
								Start: ast.Position{
									Column: 6,
									Line:   155,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 30,
										Line:   155,
									},
									File:   "environmental_test.flux",
									Source: "experimental.idealGasLaw",
									Start: ast.Position{
										Column: 6,
										Line:   155,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   155,
										},
										File:   "environmental_test.flux",
										Source: "experimental",
										Start: ast.Position{
											Column: 6,
											Line:   155,
										},
									},
								},
								Name: "experimental",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   155,
										},
										File:   "environmental_test.flux",
										Source: "idealGasLaw",
										Start: ast.Position{
											Column: 19,
											Line:   155,
										},
									},
								},
								Name: "idealGasLaw",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   152,
							},
							File:   "environmental_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 10,
								Line:   152,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   152,
								},
								File:   "environmental_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 10,
									Line:   152,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   152,
							},
							File:   "environmental_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   152,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 92,
							Line:   158,
						},
						File:   "environmental_test.flux",
						Source: "_set = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set}",
						Start: ast.Position{
							Column: 6,
							Line:   157,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   157,
							},
							File:   "environmental_test.flux",
							Source: "_set",
							Start: ast.Position{
								Column: 6,
								Line:   157,
							},
						},
					},
					Name: "_set",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 92,
								Line:   158,
							},
							File:   "environmental_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set}",
							Start: ast.Position{
								Column: 13,
								Line:   157,
							},
						},
					},
					Body: &ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 92,
									Line:   158,
								},
								File:   "environmental_test.flux",
								Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set}",
								Start: ast.Position{
									Column: 3,
									Line:   158,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   158,
									},
									File:   "environmental_test.flux",
									Source: "input: testing.loadStorage(csv: inData)",
									Start: ast.Position{
										Column: 4,
										Line:   158,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "input",
										Start: ast.Position{
											Column: 4,
											Line:   158,
										},
									},
								},
								Name: "input",
							},
							Value: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   158,
											},
											File:   "environmental_test.flux",
											Source: "csv: inData",
											Start: ast.Position{
												Column: 31,
												Line:   158,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   158,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   158,
													},
													File:   "environmental_test.flux",
													Source: "csv",
													Start: ast.Position{
														Column: 31,
														Line:   158,
													},
												},
											},
											Name: "csv",
										},
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   158,
													},
													File:   "environmental_test.flux",
													Source: "inData",
													Start: ast.Position{
														Column: 36,
														Line:   158,
													},
												},
											},
											Name: "inData",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 11,
											Line:   158,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   158,
											},
											File:   "environmental_test.flux",
											Source: "testing.loadStorage",
											Start: ast.Position{
												Column: 11,
												Line:   158,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "testing",
												Start: ast.Position{
													Column: 11,
													Line:   158,
												},
											},
										},
										Name: "testing",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "loadStorage",
												Start: ast.Position{
													Column: 19,
													Line:   158,
												},
											},
										},
										Name: "loadStorage",
									},
								},
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 80,
										Line:   158,
									},
									File:   "environmental_test.flux",
									Source: "want: testing.loadMem(csv: outData)",
									Start: ast.Position{
										Column: 45,
										Line:   158,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "want",
										Start: ast.Position{
											Column: 45,
											Line:   158,
										},
									},
								},
								Name: "want",
							},
							Value: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 79,
												Line:   158,
											},
											File:   "environmental_test.flux",
											Source: "csv: outData",
											Start: ast.Position{
												Column: 67,
												Line:   158,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   158,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 70,
														Line:   158,
													},
													File:   "environmental_test.flux",
													Source: "csv",
													Start: ast.Position{
														Column: 67,
														Line:   158,
													},
												},
											},
											Name: "csv",
										},
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   158,
													},
													File:   "environmental_test.flux",
													Source: "outData",
													Start: ast.Position{
														Column: 72,
														Line:   158,
													},
												},
											},
											Name: "outData",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 51,
											Line:   158,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 66,
												Line:   158,
											},
											File:   "environmental_test.flux",
											Source: "testing.loadMem",
											Start: ast.Position{
												Column: 51,
												Line:   158,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "testing",
												Start: ast.Position{
													Column: 51,
													Line:   158,
												},
											},
										},
										Name: "testing",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   158,
												},
												File:   "environmental_test.flux",
												Source: "loadMem",
												Start: ast.Position{
													Column: 59,
													Line:   158,
												},
											},
										},
										Name: "loadMem",
									},
								},
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 91,
										Line:   158,
									},
									File:   "environmental_test.flux",
									Source: "fn: t_set",
									Start: ast.Position{
										Column: 82,
										Line:   158,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 84,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "fn",
										Start: ast.Position{
											Column: 82,
											Line:   158,
										},
									},
								},
								Name: "fn",
							},
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 91,
											Line:   158,
										},
										File:   "environmental_test.flux",
										Source: "t_set",
										Start: ast.Position{
											Column: 86,
											Line:   158,
										},
									},
								},
								Name: "t_set",
							},
						}},
						With: nil,
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 92,
						Line:   158,
					},
					File:   "environmental_test.flux",
					Source: "test _set = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set}",
					Start: ast.Position{
						Column: 1,
						Line:   157,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "environmental_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "environmental_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 23,
						Line:   4,
					},
					File:   "environmental_test.flux",
					Source: "import \"environmental\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   4,
						},
						File:   "environmental_test.flux",
						Source: "\"environmental\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "environmental",
			},
		}},
		Name: "environmental_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 27,
						Line:   1,
					},
					File:   "environmental_test.flux",
					Source: "package environmental_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 27,
							Line:   1,
						},
						File:   "environmental_test.flux",
						Source: "environmental_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "main",
			},
		},
	}},
	Package: "main",
	Path:    "",
}}
