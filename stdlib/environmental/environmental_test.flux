package environmental_test

import "testing"
import "environmental"

option now = () => (2030-01-01T00:00:00Z)

inData = "
#datatype,string,long,double,dateTime:RFC3339
#default,pressure,,,
,result,table,_value,_time
,,0,1002.49,2019-08-22T16:25:30Z
,,0,1002.4616666666667,2019-08-22T16:26:00Z
,,0,1002.466,2019-08-22T16:26:30Z
,,0,1002.47,2019-08-22T16:27:00Z
,,0,1002.465,2019-08-22T16:27:30Z
,,0,1002.458,2019-08-22T16:28:00Z
,,0,1002.448,2019-08-22T16:28:30Z
,,0,1002.4633333333333,2019-08-22T16:29:00Z
,,0,1002.45,2019-08-22T16:29:30Z
,,0,1002.434,2019-08-22T16:30:00Z
,,0,1002.436,2019-08-22T16:30:30Z
,,0,1002.4333333333334,2019-08-22T16:31:00Z
,,0,1002.43,2019-08-22T16:31:30Z
,,0,1002.424,2019-08-22T16:32:00Z
,,0,1002.4233333333333,2019-08-22T16:32:30Z
,,0,1002.43,2019-08-22T16:33:00Z
,,0,1002.432,2019-08-22T16:33:30Z
,,0,1002.3966666666666,2019-08-22T16:34:00Z
,,0,1002.39,2019-08-22T16:34:30Z
,,0,1002.4375,2019-08-22T16:35:00Z
,,0,1002.418,2019-08-22T16:35:30Z
,,0,1002.43,2019-08-22T16:36:00Z
,,0,1002.415,2019-08-22T16:36:30Z
,,0,1002.392,2019-08-22T16:37:00Z
,,0,1002.392,2019-08-22T16:37:30Z
,,0,1002.3783333333332,2019-08-22T16:38:00Z
,,0,1002.368,2019-08-22T16:38:30Z
,,0,1002.368,2019-08-22T16:39:00Z
,,0,1002.36,2019-08-22T16:39:30Z
,,0,1002.3340000000001,2019-08-22T16:40:00Z
,,0,,2019-08-22T16:40:03.097505Z

#datatype,string,long,double,dateTime:RFC3339
#default,gas,,,
,result,table,_value,_time
,,0,660.5,2019-08-22T16:25:30Z
,,0,653,2019-08-22T16:26:00Z
,,0,650.3333333333334,2019-08-22T16:26:30Z
,,0,655,2019-08-22T16:27:00Z
,,0,654.5,2019-08-22T16:27:30Z
,,0,652.3333333333334,2019-08-22T16:28:00Z
,,0,651,2019-08-22T16:28:30Z
,,0,648.5,2019-08-22T16:29:00Z
,,0,648.3333333333334,2019-08-22T16:29:30Z
,,0,646,2019-08-22T16:30:00Z
,,0,644,2019-08-22T16:30:30Z
,,0,644.3333333333334,2019-08-22T16:31:00Z
,,0,643,2019-08-22T16:31:30Z
,,0,640,2019-08-22T16:32:00Z
,,0,638.5,2019-08-22T16:32:30Z
,,0,640,2019-08-22T16:33:00Z
,,0,656.6666666666666,2019-08-22T16:33:30Z
,,0,647,2019-08-22T16:34:00Z
,,0,641,2019-08-22T16:34:30Z
,,0,636,2019-08-22T16:35:00Z
,,0,633.6666666666666,2019-08-22T16:35:30Z
,,0,632.5,2019-08-22T16:36:00Z
,,0,631.5,2019-08-22T16:36:30Z
,,0,629.3333333333334,2019-08-22T16:37:00Z
,,0,628.5,2019-08-22T16:37:30Z
,,0,636.5,2019-08-22T16:38:00Z
,,0,667.6666666666666,2019-08-22T16:38:30Z
,,0,682.5,2019-08-22T16:39:00Z
,,0,663,2019-08-22T16:39:30Z
,,0,642,2019-08-22T16:40:00Z
,,0,642,2019-08-22T16:40:03.097505Z

#datatype,string,long,double,dateTime:RFC3339
#default,temperature,,,
,result,table,_value,_time
,,0,32.444,2019-08-22T16:25:30Z
,,0,32.44833333333333,2019-08-22T16:26:00Z
,,0,32.446000000000005,2019-08-22T16:26:30Z
,,0,32.45,2019-08-22T16:27:00Z
,,0,32.39833333333333,2019-08-22T16:27:30Z
,,0,32.38199999999999,2019-08-22T16:28:00Z
,,0,32.364000000000004,2019-08-22T16:28:30Z
,,0,32.32333333333333,2019-08-22T16:29:00Z
,,0,32.29,2019-08-22T16:29:30Z
,,0,32.251999999999995,2019-08-22T16:30:00Z
,,0,32.274,2019-08-22T16:30:30Z
,,0,32.288333333333334,2019-08-22T16:31:00Z
,,0,32.28,2019-08-22T16:31:30Z
,,0,32.269999999999996,2019-08-22T16:32:00Z
,,0,32.193333333333335,2019-08-22T16:32:30Z
,,0,32.164,2019-08-22T16:33:00Z
,,0,32.124,2019-08-22T16:33:30Z
,,0,32.098333333333336,2019-08-22T16:34:00Z
,,0,32.125,2019-08-22T16:34:30Z
,,0,32.084999999999994,2019-08-22T16:35:00Z
,,0,32.12,2019-08-22T16:35:30Z
,,0,32.07666666666666,2019-08-22T16:36:00Z
,,0,32.11,2019-08-22T16:36:30Z
,,0,32.169999999999995,2019-08-22T16:37:00Z
,,0,32.204,2019-08-22T16:37:30Z
,,0,32.20333333333334,2019-08-22T16:38:00Z
,,0,32.221999999999994,2019-08-22T16:38:30Z
,,0,32.3,2019-08-22T16:39:00Z
,,0,32.36333333333333,2019-08-22T16:39:30Z
,,0,32.4,2019-08-22T16:40:00Z
,,0,,2019-08-22T16:40:03.097505Z
"

outData = "
#datatype,string,long,dateTime:RFC3339,double
#default,CO2corr,,,
,result,table,_time,_value
,,0,2019-08-22T16:25:30Z,684.2572294843294
,,0,2019-08-22T16:26:00Z,676.5161782982694
,,0,2019-08-22T16:26:30Z,673.7454215332459
,,0,2019-08-22T16:27:00Z,678.5862632194672
,,0,2019-08-22T16:27:30Z,677.9570013676977
,,0,2019-08-22T16:28:00Z,675.6812796607787
,,0,2019-08-22T16:28:30Z,674.2672250773508
,,0,2019-08-22T16:29:00Z,671.5781944509896
,,0,2019-08-22T16:29:30Z,671.3412618708516
,,0,2019-08-22T16:30:00Z,668.8525777059576
,,0,2019-08-22T16:30:30Z,666.8285287025711
,,0,2019-08-22T16:31:00Z,667.2067629300313
,,0,2019-08-22T16:31:30Z,665.810145215983
,,0,2019-08-22T16:32:00Z,662.6859905976642
,,0,2019-08-22T16:32:30Z,660.9673020266739
,,0,2019-08-22T16:33:00Z,662.4520316686965
,,0,2019-08-22T16:33:30Z,679.6129809787086
,,0,2019-08-22T16:34:00Z,669.5758278840392
,,0,2019-08-22T16:34:30Z,663.4288337097714
,,0,2019-08-22T16:35:00Z,658.1364442534563
,,0,2019-08-22T16:35:30Z,655.809843589246
,,0,2019-08-22T16:36:00Z,654.5016518797775
,,0,2019-08-22T16:36:30Z,653.5480102237651
,,0,2019-08-22T16:37:00Z,651.4486609810317
,,0,2019-08-22T16:37:30Z,650.6584919148427
,,0,2019-08-22T16:38:00Z,658.9480866320873
,,0,2019-08-22T16:38:30Z,691.2633204845954
,,0,2019-08-22T16:39:00Z,706.8013824740459
,,0,2019-08-22T16:39:30Z,686.7549024182185
,,0,2019-08-22T16:40:00Z,665.0995478950251
,,0,2019-08-22T16:40:03.097505Z,665.0995478950251
"

t_set = (table=<-) =>
	table
		|> range(start: 2019-08-22T16:25:30Z)
		|> experimental.idealGasLaw()

test _set = () =>
	({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_set})

